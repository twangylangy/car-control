import serial
import time



if __name__ == '__main__':
    ser = serial.Serial('/dev/ttyACM0', 9600, timeout=1)
    ser.reset_input_buffer()

    while True:
        integer = '1'
        ser.write(bytes(integer, 'ascii'))
        time.sleep(0.05)
        # arduino_input = ser.readline().decode('ascii').rstrip()
        # print(arduino_input)


import serial
import time


if __name__ == '__main__':
    ser = serial.Serial('/dev/ttyACM0', 9600, timeout=1)
    ser.reset_input_buffer()

    try:
        while 1:
            # read the serial port
            try:
                val = ser.readline().decode('utf=8')
                print
                val
            except SerialException:
                sleep(0.05)  # Maybe don't do this, or mess around with the interval
                continue

    while True:
        integer = '1'
        ser.write(bytes(integer, 'ascii'))
        time.sleep(0.05)
        # arduino_input = ser.readline().decode('ascii').rstrip()
        # print(arduino_input)


https://www.aranacorp.com/en/serial-communication-between-raspberry-pi-and-arduino/

self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/ttyACM0'

During handling of the above exception, another exception occurred:
    with serial.Serial("/dev/ttyACM0", 9600, timeout=1) as arduino:
  File "/usr/lib/python3/dist-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/usr/lib/python3/dist-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/ttyACM0: [Errno 2] No such file or directory: '/dev/ttyACM0'



#!/usr/bin/env python3
import serial
import time

if __name__ == '__main__':
    ser = serial.Serial('/dev/ttyACM0', 9600, timeout=1)
    ser.reset_input_buffer()

    while True:
        ser.write(b"Hello from Raspberry Pi!\n")
        line = ser.readline().decode('utf-8').rstrip()
        print(line)
        time.sleep(1)
